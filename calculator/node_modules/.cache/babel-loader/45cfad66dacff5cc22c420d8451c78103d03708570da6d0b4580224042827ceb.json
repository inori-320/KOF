{"ast":null,"code":"import ACTIONS from \"./actions\";\nconst reducer = (state = {\n  currentOperand: \"0\",\n  lastOperand: \"\",\n  operation: \"\"\n}, action) => {\n  switch (action.type) {\n    case ACTIONS.ADD_DIGIT:\n      if (state.currentOperand === \"0\" && state.lastOperand === \"0\") {\n        return state;\n      }\n      return {\n        ...state,\n        currentOperand: state.currentOperand + action.digit\n      };\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["ACTIONS","reducer","state","currentOperand","lastOperand","operation","action","type","ADD_DIGIT","digit"],"sources":["E:/practice/Web class/React practice/calculator/src/redux/reducer.js"],"sourcesContent":["import ACTIONS from \"./actions\";\r\n\r\nconst reducer = (state = {\r\n    currentOperand: \"0\",\r\n    lastOperand: \"\",\r\n    operation: \"\"\r\n}, action) => {\r\n    switch(action.type) {\r\n        case ACTIONS.ADD_DIGIT:\r\n            if (state.currentOperand === \"0\" && state.lastOperand === \"0\"){\r\n                return state;\r\n            }\r\n            return {\r\n                ...state, \r\n                currentOperand: state.currentOperand + action.digit\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"],"mappings":"AAAA,OAAOA,OAAO,MAAM,WAAW;AAE/B,MAAMC,OAAO,GAAGA,CAACC,KAAK,GAAG;EACrBC,cAAc,EAAE,GAAG;EACnBC,WAAW,EAAE,EAAE;EACfC,SAAS,EAAE;AACf,CAAC,EAAEC,MAAM,KAAK;EACV,QAAOA,MAAM,CAACC,IAAI;IACd,KAAKP,OAAO,CAACQ,SAAS;MAClB,IAAIN,KAAK,CAACC,cAAc,KAAK,GAAG,IAAID,KAAK,CAACE,WAAW,KAAK,GAAG,EAAC;QAC1D,OAAOF,KAAK;MAChB;MACA,OAAO;QACH,GAAGA,KAAK;QACRC,cAAc,EAAED,KAAK,CAACC,cAAc,GAAGG,MAAM,CAACG;MAClD,CAAC;IACL;MACI,OAAOP,KAAK;EACpB;AACJ,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}